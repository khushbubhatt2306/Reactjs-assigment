Question 1: What is conditional rendering in React? How can you conditionally render
elements in a React component?
=>Conditional rendering in React means showing different content based on certain conditions. It’s like telling React to display one thing if a condition is true and something else if it's false.

For example, you can show a welcome message if a user is logged in, or ask them to log in if they're not. This is done using simple JavaScript logic inside your React component.

In short, conditional rendering helps you control what is shown to users based on their actions or data changes.

You can conditionally render elements in a React component by using basic JavaScript logic

There are several ways to conditionally render elements in React. Here are the most common techniques:
1. Using if/else Statements
2. Using Ternary Operator
3. Using && (Logical AND) Operator
4. Using return in Functions


Question 2: Explain how if-else, ternary operators, and && (logical AND) are used in JSXfor 
conditional rendering.
1. Using if-else Statements:
The if-else statement is the most basic way to conditionally render content. It’s typically used outside of the JSX return block (in the function body) to determine which JSX to render.
example:
import React, { useState } from 'react';

function MyComponent() {
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  let message;
  if (isLoggedIn) {
    message = <p>Welcome back, User!</p>;
  } else {
    message = <p>Please log in.</p>;
  }

  return <div>{message}</div>;
}

export default MyComponent;

2. Using Ternary Operator:
The ternary operator is a shorthand for if-else and works directly inside JSX. It’s useful when you want to render one of two elements based on a condition.
example:
import React, { useState } from 'react';

function MyComponent() {
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  return (
    <div>
      {isLoggedIn ? <p>Welcome back, User!</p> : <p>Please log in.</p>}
    </div>
  );
}

export default MyComponent;

3. Using && (Logical AND) Operator:
The && (logical AND) operator is useful when you want to render something only if a condition is true. If the condition is false, React won’t render anything.
example:
import React, { useState } from 'react';

function MyComponent() {
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  return (
    <div>
      {isLoggedIn && <p>Welcome back, User!</p>} {/* This will only show if isLoggedIn is true */}
    </div>
  );
}

export default MyComponent;
